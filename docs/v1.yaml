openapi: 3.0.4
info:
  title: Candidate Careers API Documentation
  description: REST API Documentation for Candidate Careers Application
  version: 1.0.0

servers:
  - url: http://localhost:3001/api/v1
    description: Local development server
  - url: https://careers.candidatecollege.org/api/v1
    description: Remote production server

paths:
  /auth/register:
    post:
      summary: Register a new user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: User registered
  
  /roles:
    post:
      summary: Create a role
      tags: [Roles]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleCreate'
      responses:
        '201': { description: Role created }
    get:
      summary: List roles
      tags: [Roles]
      parameters:
        - in: query
          name: page
          schema: { type: integer }
      responses:
        '200': { description: Paginated list of roles }
  
  /roles/{id}:
    patch:
      summary: Update role
      tags: [Roles]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/RoleUpdate' }
      responses:
        '200': { description: Role updated }
    delete:
      summary: Delete role
      tags: [Roles]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
      responses:
        '204': { description: Role deleted }
  
  /roles/{id}/permissions:
    post:
      summary: Bulk assign permissions to role
      tags: [RolePermissions]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                permissionIds:
                  type: array
                  items: { type: integer }
      responses:
        '200': { description: Permissions assigned }
  
  /roles/{id}/permissions/{permId}:
    delete:
      summary: Revoke permission from role
      tags: [RolePermissions]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
        - in: path
          name: permId
          required: true
          schema: { type: integer }
      responses:
        '204': { description: Permission revoked }

  /users/{id}/roles:
    post:
      summary: Assign roles to user
      tags: [UserRoles]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleIds:
                  type: array
                  items: { type: integer }
      responses:
        '200': { description: Roles assigned }

  /users/{id}/roles/{roleId}:
    delete:
      summary: Revoke role from user
      tags: [UserRoles]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
        - in: path
          name: roleId
          required: true
          schema: { type: integer }
      responses:
        '204': { description: Role revoked }
    post:
      summary: Register a new user
      # description: hello
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Invalid input
